=begin
#DocuSign REST API

#The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

OpenAPI spec version: v2
Contact: devcenter@docusign.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::TemplatesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TemplatesApi' do
  before do
    # run before each test
    @instance = SwaggerClient::TemplatesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TemplatesApi' do
    it 'should create an instact of TemplatesApi' do
      expect(@instance).to be_instance_of(SwaggerClient::TemplatesApi)
    end
  end

  # unit tests for create_custom_fields
  # Creates custom document fields in an existing template document.
  # Creates custom document fields in an existing template document.
  # @param account_id The external account number (int) or account ID Guid.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [TemplateCustomFields] :template_custom_fields 
  # @return [CustomFields]
  describe 'create_custom_fields test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_document_fields
  # Creates custom document fields in an existing template document.
  # Creates custom document fields in an existing template document.
  # @param account_id The external account number (int) or account ID Guid.
  # @param document_id The ID of the document being accessed.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [DocumentFieldsInformation] :document_fields_information 
  # @return [DocumentFieldsInformation]
  describe 'create_document_fields test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_edit_view
  # Provides a URL to start an edit view of the Template UI
  # 
  # @param account_id The external account number (int) or account ID Guid.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [ReturnUrlRequest] :return_url_request 
  # @return [ViewUrl]
  describe 'create_edit_view test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_lock
  # Lock a template.
  # Locks the specified template, and sets the time until the lock expires, to prevent other users or recipients from accessing and changing the template.  ###### Note: Users must have envelope locking capability enabled to use this function (the userSetting property &#x60;canLockEnvelopes&#x60; must be set to **true** for the user).
  # @param account_id The external account number (int) or account ID Guid.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [LockRequest] :lock_request 
  # @return [LockInformation]
  describe 'create_lock test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_recipients
  # Adds tabs for a recipient.
  # Adds one or more recipients to a template.
  # @param account_id The external account number (int) or account ID Guid.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :resend_envelope 
  # @option opts [TemplateRecipients] :template_recipients 
  # @return [Recipients]
  describe 'create_recipients test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_tabs
  # Adds tabs for a recipient.
  # Adds one or more tabs for a recipient.
  # @param account_id The external account number (int) or account ID Guid.
  # @param recipient_id The ID of the recipient being accessed.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [TemplateTabs] :template_tabs 
  # @return [Tabs]
  describe 'create_tabs test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_template
  # Creates an envelope from a template.
  # Creates a template definition using a multipart request.  ###Template Email Subject Merge Fields  Call this endpoint to insert a recipient name and email address merge fields into the email subject line when creating or sending from a template.  The merge fields, based on the recipient’s role name, are added to the &#x60;emailSubject&#x60; property when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.  Both the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient. ###### Note: If merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.  To add a recipient’s name in the subject line add the following text in the &#x60;emailSubject&#x60; property when creating the template or when sending an envelope from a template:  [[&lt;roleName&gt;_UserName]]  Example:  &#x60;\&quot;emailSubject\&quot;:\&quot;[[Signer 1_UserName]], Please sign this NDA\&quot;,&#x60;  To add a recipient’s email address in the subject line add the following text in the &#x60;emailSubject&#x60; property when creating the template or when sending an envelope from a template:  [[&lt;roleName&gt;_Email]]  Example:  &#x60;\&quot;emailSubject\&quot;:\&quot;[[Signer 1_Email]], Please sign this NDA\&quot;,&#x60;   In both cases the &lt;roleName&gt; is the recipient&#39;s contents of the &#x60;roleName&#x60; property in the template.  For cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then [[&lt;roleName&gt;_UserName]] or [[&lt;roleName&gt;_Email]] is shown in the email subject.
  # @param account_id The external account number (int) or account ID Guid.
  # @param [Hash] opts the optional parameters
  # @option opts [EnvelopeTemplate] :envelope_template 
  # @return [TemplateSummary]
  describe 'create_template test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_bulk_recipients
  # Deletes the bulk recipient list on a template.
  # Deletes the bulk recipient list on a template.
  # @param account_id The external account number (int) or account ID Guid.
  # @param recipient_id The ID of the recipient being accessed.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @return [BulkRecipientsUpdateResponse]
  describe 'delete_bulk_recipients test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_custom_fields
  # Deletes envelope custom fields in a template.
  # Deletes envelope custom fields in a template.
  # @param account_id The external account number (int) or account ID Guid.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [TemplateCustomFields] :template_custom_fields 
  # @return [CustomFields]
  describe 'delete_custom_fields test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_document_fields
  # Deletes custom document fields from an existing template document.
  # Deletes custom document fields from an existing template document.
  # @param account_id The external account number (int) or account ID Guid.
  # @param document_id The ID of the document being accessed.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [DocumentFieldsInformation] :document_fields_information 
  # @return [DocumentFieldsInformation]
  describe 'delete_document_fields test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_document_page
  # Deletes a page from a document in an template.
  # Deletes a page from a document in a template based on the page number.
  # @param account_id The external account number (int) or account ID Guid.
  # @param document_id The ID of the document being accessed.
  # @param page_number The page number being accessed.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [PageRequest] :page_request 
  # @return [nil]
  describe 'delete_document_page test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_documents
  # Deletes documents from a template.
  # Deletes one or more documents from an existing template.
  # @param account_id The external account number (int) or account ID Guid.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [EnvelopeDefinition] :envelope_definition 
  # @return [TemplateDocumentsResult]
  describe 'delete_documents test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_group_share
  # Removes a member group&#39;s sharing permissions for a template.
  # Removes a member group&#39;s sharing permissions for a specified template.
  # @param account_id The external account number (int) or account ID Guid.
  # @param template_id The ID of the template being accessed.
  # @param template_part Currently, the only defined part is **groups**.
  # @param [Hash] opts the optional parameters
  # @option opts [GroupInformation] :group_information 
  # @return [GroupInformation]
  describe 'delete_group_share test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_lock
  # Deletes a template lock.
  # Deletes the lock from the specified template. The &#x60;X-DocuSign-Edit&#x60; header must be included in the request.
  # @param account_id The external account number (int) or account ID Guid.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [LockRequest] :lock_request 
  # @return [LockInformation]
  describe 'delete_lock test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_recipient
  # Deletes the specified recipient file from a template.
  # Deletes the specified recipient file from the specified template.
  # @param account_id The external account number (int) or account ID Guid.
  # @param recipient_id The ID of the recipient being accessed.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [TemplateRecipients] :template_recipients 
  # @return [Recipients]
  describe 'delete_recipient test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_recipients
  # Deletes recipients from a template.
  # Deletes one or more recipients from a template. Recipients to be deleted are listed in the request, with the &#x60;recipientId&#x60; being used as the key for deleting recipients.
  # @param account_id The external account number (int) or account ID Guid.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [TemplateRecipients] :template_recipients 
  # @return [Recipients]
  describe 'delete_recipients test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_tabs
  # Deletes the tabs associated with a recipient in a template.
  # Deletes one or more tabs associated with a recipient in a template.
  # @param account_id The external account number (int) or account ID Guid.
  # @param recipient_id The ID of the recipient being accessed.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [TemplateTabs] :template_tabs 
  # @return [Tabs]
  describe 'delete_tabs test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get
  # Gets a list of templates for a specified account.
  # Retrieves the definition of the specified template.
  # @param account_id The external account number (int) or account ID Guid.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include 
  # @return [EnvelopeTemplate]
  describe 'get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_document
  # Gets PDF documents from a template.
  # Retrieves one or more PDF documents from the specified template.  You can specify the ID of the document to retrieve or can specify &#x60;combined&#x60; to retrieve all documents in the template as one pdf.
  # @param account_id The external account number (int) or account ID Guid.
  # @param document_id The ID of the document being accessed.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :encrypt 
  # @option opts [String] :show_changes 
  # @return [File]
  describe 'get_document test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_document_page_image
  # Gets a page image from a template for display.
  # Retrieves a page image for display from the specified template.
  # @param account_id The external account number (int) or account ID Guid.
  # @param document_id The ID of the document being accessed.
  # @param page_number The page number being accessed.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :dpi 
  # @option opts [String] :max_height 
  # @option opts [String] :max_width 
  # @option opts [String] :show_changes 
  # @return [File]
  describe 'get_document_page_image test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_lock
  # Gets template lock information.
  # Retrieves general information about the template lock.  If the call is made by the user who has the lock and the request has the same integrator key as original, then the &#x60;X-DocuSign-Edit&#x60; header  field and additional lock information is included in the response. This allows users to recover a lost editing session token and the &#x60;X-DocuSign-Edit&#x60; header.
  # @param account_id The external account number (int) or account ID Guid.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @return [LockInformation]
  describe 'get_lock test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_notification_settings
  # Gets template notification information.
  # Retrieves the envelope notification, reminders and expirations, information for an existing template.
  # @param account_id The external account number (int) or account ID Guid.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @return [Notification]
  describe 'get_notification_settings test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_bulk_recipients
  # Gets the bulk recipient file from a template.
  # Retrieves the bulk recipient file information from a template that has a bulk recipient.
  # @param account_id The external account number (int) or account ID Guid.
  # @param recipient_id The ID of the recipient being accessed.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include_tabs 
  # @option opts [String] :start_position 
  # @return [BulkRecipientsResponse]
  describe 'list_bulk_recipients test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_custom_fields
  # Gets the custom document fields from a template.
  # Retrieves the custom document field information from an existing template.
  # @param account_id The external account number (int) or account ID Guid.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @return [CustomFields]
  describe 'list_custom_fields test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_document_fields
  # Gets the custom document fields for a an existing template document.
  # Retrieves the custom document fields for an existing template document.
  # @param account_id The external account number (int) or account ID Guid.
  # @param document_id The ID of the document being accessed.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @return [DocumentFieldsInformation]
  describe 'list_document_fields test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_documents
  # Gets a list of documents associated with a template.
  # Retrieves a list of documents associated with the specified template.
  # @param account_id The external account number (int) or account ID Guid.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @return [TemplateDocumentsResult]
  describe 'list_documents test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_recipients
  # Gets recipient information from a template.
  # Retrieves the information for all recipients in the specified template.
  # @param account_id The external account number (int) or account ID Guid.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include_anchor_tab_locations  When set to **true** and &#x60;include_tabs&#x60; is set to **true**, all tabs with anchor tab properties are included in the response. 
  # @option opts [String] :include_extended  When set to **true**, the extended properties are included in the response. 
  # @option opts [String] :include_tabs When set to **true**, the tab information associated with the recipient is included in the response.
  # @return [Recipients]
  describe 'list_recipients test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tabs
  # Gets the tabs information for a signer or sign-in-person recipient in a template.
  # Gets the tabs information for a signer or sign-in-person recipient in a template.
  # @param account_id The external account number (int) or account ID Guid.
  # @param recipient_id The ID of the recipient being accessed.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include_anchor_tab_locations When set to **true**, all tabs with anchor tab properties are included in the response. 
  # @option opts [String] :include_metadata 
  # @return [Tabs]
  describe 'list_tabs test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_templates
  # Gets the definition of a template.
  # Retrieves the list of templates for the specified account. The request can be limited to a specific folder.
  # @param account_id The external account number (int) or account ID Guid.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :count Number of records to return in the cache.
  # @option opts [String] :folder The query value can be a folder name or folder ID. The response will only return templates in the specified folder.
  # @option opts [String] :folder_ids A comma separated list of folder ID GUIDs.
  # @option opts [String] :from_date Start of the search date range. Only returns templates created on or after this date/time. If no value is specified, there is no limit on the earliest date created.
  # @option opts [String] :include A comma separated list of additional template attributes to include in the response. Valid values are: recipients, folders, documents, custom_fields, and notifications.
  # @option opts [String] :order Sets the direction order used to sort the list. Valid values are: -asc &#x3D; ascending sort order (a to z)  -desc &#x3D; descending sort order (z to a)
  # @option opts [String] :order_by Sets the file attribute used to sort the list. Valid values are:  -name: template name  -modified: date/time template was last modified.  -used: date/time the template was last used.
  # @option opts [String] :search_text The search text used to search the names of templates.
  # @option opts [String] :shared 
  # @option opts [String] :shared_by_me If true, the response only includes templates shared by the user. If false, the response only returns template not shared by the user. If not specified, the response is not affected.
  # @option opts [String] :start_position The starting index for the first template shown in the response. This must be greater than or equal to 0 (zero).
  # @option opts [String] :to_date End of the search date range. Only returns templates created up to this date/time. If no value is provided, this defaults to the current date.
  # @option opts [String] :used_from_date Start of the search date range. Only returns templates used or edited on or after this date/time. If no value is specified, there is no limit on the earliest date used.
  # @option opts [String] :used_to_date End of the search date range. Only returns templates used or edited up to this date/time. If no value is provided, this defaults to the current date.
  # @option opts [String] :user_filter Sets if the templates shown in the response Valid values are:  -owned_by_me: only shows templates the user owns.  -shared_with_me: only shows templates that are shared with the user.  -all: shows all templates owned or shared with the user.
  # @return [EnvelopeTemplateResults]
  describe 'list_templates test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for rotate_document_page
  # Rotates page image from a template for display.
  # Rotates page image from a template for display. The page image can be rotated to the left or right.
  # @param account_id The external account number (int) or account ID Guid.
  # @param document_id The ID of the document being accessed.
  # @param page_number The page number being accessed.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [PageRequest] :page_request 
  # @return [nil]
  describe 'rotate_document_page test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update
  # Updates an existing template.
  # Updates an existing template.
  # @param account_id The external account number (int) or account ID Guid.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [EnvelopeTemplate] :envelope_template 
  # @return [TemplateUpdateSummary]
  describe 'update test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_bulk_recipients
  # Adds or replaces the bulk recipients list in a template.
  # Updates the bulk recipients in a template using a file upload. The Content-Type supported for uploading a bulk recipient file is CSV (text/csv).  The REST API does not support modifying individual rows or values in the bulk recipients file. It only allows the entire file to be added or replaced with a new file.
  # @param account_id The external account number (int) or account ID Guid.
  # @param recipient_id The ID of the recipient being accessed.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [BulkRecipientsRequest] :bulk_recipients_request 
  # @return [BulkRecipientsSummaryResponse]
  describe 'update_bulk_recipients test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_custom_fields
  # Updates envelope custom fields in a template.
  # Updates the custom fields in a template.  Each custom field used in a template must have a unique name.
  # @param account_id The external account number (int) or account ID Guid.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [TemplateCustomFields] :template_custom_fields 
  # @return [CustomFields]
  describe 'update_custom_fields test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_document
  # Adds a document to a template document.
  # Adds the specified document to an existing template document.
  # @param account_id The external account number (int) or account ID Guid.
  # @param document_id The ID of the document being accessed.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :apply_document_fields 
  # @option opts [String] :is_envelope_definition 
  # @option opts [EnvelopeDefinition] :envelope_definition 
  # @return [EnvelopeDocument]
  describe 'update_document test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_document_fields
  # Updates existing custom document fields in an existing template document.
  # Updates existing custom document fields in an existing template document.
  # @param account_id The external account number (int) or account ID Guid.
  # @param document_id The ID of the document being accessed.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [DocumentFieldsInformation] :document_fields_information 
  # @return [DocumentFieldsInformation]
  describe 'update_document_fields test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_documents
  # Adds documents to a template document.
  # Adds one or more documents to an existing template document.
  # @param account_id The external account number (int) or account ID Guid.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :apply_document_fields 
  # @option opts [EnvelopeDefinition] :envelope_definition 
  # @return [TemplateDocumentsResult]
  describe 'update_documents test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_group_share
  # Shares a template with a group
  # Shares a template with the specified members group.
  # @param account_id The external account number (int) or account ID Guid.
  # @param template_id The ID of the template being accessed.
  # @param template_part Currently, the only defined part is **groups**.
  # @param [Hash] opts the optional parameters
  # @option opts [GroupInformation] :group_information 
  # @return [GroupInformation]
  describe 'update_group_share test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_lock
  # Updates a template lock.
  # Updates the lock duration time or update the &#x60;lockedByApp&#x60; property information for the specified template. The user and integrator key must match the user specified by the &#x60;lockByUser&#x60; property and integrator key information and the &#x60;X-DocuSign-Edit&#x60; header must be included or an error will be generated.
  # @param account_id The external account number (int) or account ID Guid.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [LockRequest] :lock_request 
  # @return [LockInformation]
  describe 'update_lock test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_notification_settings
  # Updates the notification  structure for an existing template.
  # Updates the notification structure for an existing template. Use this endpoint to set reminder and expiration notifications.
  # @param account_id The external account number (int) or account ID Guid.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [TemplateNotificationRequest] :template_notification_request 
  # @return [Notification]
  describe 'update_notification_settings test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_recipients
  # Updates recipients in a template.
  # Updates recipients in a template.   You can edit the following properties: &#x60;email&#x60;, &#x60;userName&#x60;, &#x60;routingOrder&#x60;, &#x60;faxNumber&#x60;, &#x60;deliveryMethod&#x60;, &#x60;accessCode&#x60;, and &#x60;requireIdLookup&#x60;.
  # @param account_id The external account number (int) or account ID Guid.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :resend_envelope 
  # @option opts [TemplateRecipients] :template_recipients 
  # @return [RecipientsUpdateSummary]
  describe 'update_recipients test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_tabs
  # Updates the tabs for a recipient.
  # Updates one or more tabs for a recipient in a template.
  # @param account_id The external account number (int) or account ID Guid.
  # @param recipient_id The ID of the recipient being accessed.
  # @param template_id The ID of the template being accessed.
  # @param [Hash] opts the optional parameters
  # @option opts [TemplateTabs] :template_tabs 
  # @return [Tabs]
  describe 'update_tabs test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
