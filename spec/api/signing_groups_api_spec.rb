=begin
#DocuSign REST API

#The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

OpenAPI spec version: v2
Contact: devcenter@docusign.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::SigningGroupsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'SigningGroupsApi' do
  before do
    # run before each test
    @instance = SwaggerClient::SigningGroupsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SigningGroupsApi' do
    it 'should create an instact of SigningGroupsApi' do
      expect(@instance).to be_instance_of(SwaggerClient::SigningGroupsApi)
    end
  end

  # unit tests for create_list
  # Creates a signing group. 
  # Creates one or more signing groups.   Multiple signing groups can be created in one call. Only users with account administrator privileges can create signing groups.   An account can have a maximum of 50 signing groups. Each signing group can have a maximum of 50 group members.   Signing groups can be used by any account user.
  # @param account_id The external account number (int) or account ID Guid.
  # @param [Hash] opts the optional parameters
  # @option opts [SigningGroupInformation] :signing_group_information 
  # @return [SigningGroupInformation]
  describe 'create_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_list
  # Deletes one or more signing groups.
  # Deletes one or more signing groups in the specified account.
  # @param account_id The external account number (int) or account ID Guid.
  # @param [Hash] opts the optional parameters
  # @option opts [SigningGroupInformation] :signing_group_information 
  # @return [SigningGroupInformation]
  describe 'delete_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_users
  # Deletes  one or more members from a signing group.
  # Deletes  one or more members from the specified signing group. 
  # @param account_id The external account number (int) or account ID Guid.
  # @param signing_group_id 
  # @param [Hash] opts the optional parameters
  # @option opts [SigningGroupUsers] :signing_group_users 
  # @return [SigningGroupUsers]
  describe 'delete_users test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get
  # Gets information about a signing group. 
  # Retrieves information, including group member information, for the specified signing group. 
  # @param account_id The external account number (int) or account ID Guid.
  # @param signing_group_id 
  # @param [Hash] opts the optional parameters
  # @return [SigningGroup]
  describe 'get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list
  # Gets a list of the Signing Groups in an account.
  # Retrieves a list of all signing groups in the specified account.
  # @param account_id The external account number (int) or account ID Guid.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :group_type 
  # @option opts [String] :include_users When set to **true**, the response includes the signing group members. 
  # @return [SigningGroupInformation]
  describe 'list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_users
  # Gets a list of members in a Signing Group.
  # Retrieves the list of members in the specified Signing Group.
  # @param account_id The external account number (int) or account ID Guid.
  # @param signing_group_id 
  # @param [Hash] opts the optional parameters
  # @return [SigningGroupUsers]
  describe 'list_users test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update
  # Updates a signing group. 
  # Updates signing group name and member information. You can also add new members to the signing group. A signing group can have a maximum of 50 members. 
  # @param account_id The external account number (int) or account ID Guid.
  # @param signing_group_id 
  # @param [Hash] opts the optional parameters
  # @option opts [SigningGroup] :signing_group 
  # @return [SigningGroup]
  describe 'update test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_list
  # Updates signing group names.
  # Updates the name of one or more existing signing groups. 
  # @param account_id The external account number (int) or account ID Guid.
  # @param [Hash] opts the optional parameters
  # @option opts [SigningGroupInformation] :signing_group_information 
  # @return [SigningGroupInformation]
  describe 'update_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_users
  # Adds members to a signing group. 
  # Adds one or more new members to a signing group. A signing group can have a maximum of 50 members. 
  # @param account_id The external account number (int) or account ID Guid.
  # @param signing_group_id 
  # @param [Hash] opts the optional parameters
  # @option opts [SigningGroupUsers] :signing_group_users 
  # @return [SigningGroupUsers]
  describe 'update_users test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
